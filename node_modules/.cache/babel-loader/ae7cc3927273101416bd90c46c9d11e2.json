{"ast":null,"code":"var _jsxFileName = \"/home/lewagon/code/Eduard-tech/Udemy-React/react_food_app/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = name.current.value;\n    const enteredStreet = street.current.value;\n    const enteredPostal = postal.current.value;\n    const enteredCity = city.current.value;\n    const enteredNameIsVald = !isEmpty(enteredName);\n    const enteredStreetIsVald = !isEmpty(enteredStreet);\n    const enteredPostalIsVald = isFiveChars(enteredPostal);\n    const enteredCityIsVald = !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsVald,\n      street: enteredStreetIsVald,\n      postal: enteredPostalIsVald,\n      city: enteredCityIsVald\n    });\n    const formIsValid = enteredNameIsVald && enteredStreetIsVald && enteredPostalIsVald && enteredCityIsVald;\n\n    if (formIsValid) {\n      return;\n    } //Submit cart data\n\n  };\n\n  const name = useRef();\n  const street = useRef();\n  const postal = useRef();\n  const city = useRef();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Your street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: street\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.postal ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Your postal code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code! (5 characther long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"Your city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"QIVc3YwWdRnmTrQRW/LkzJCDsms=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/lewagon/code/Eduard-tech/Udemy-React/react_food_app/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","postal","city","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsVald","enteredStreetIsVald","enteredPostalIsVald","enteredCityIsVald","formIsValid","control","invalid","actions","onCancel","button"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA5C;;AACA,MAAMC,WAAW,GAAIF,KAAD,IAAWA,KAAK,CAACC,IAAN,GAAaE,MAAb,KAAwB,CAAvD;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC;AAC3DW,IAAAA,IAAI,EAAE,IADqD;AAE3DC,IAAAA,MAAM,EAAE,IAFmD;AAG3DC,IAAAA,MAAM,EAAE,IAHmD;AAI3DC,IAAAA,IAAI,EAAE;AAJqD,GAAD,CAA5D;;AAOA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGP,IAAI,CAACQ,OAAL,CAAahB,KAAjC;AACA,UAAMiB,aAAa,GAAGR,MAAM,CAACO,OAAP,CAAehB,KAArC;AACA,UAAMkB,aAAa,GAAGR,MAAM,CAACM,OAAP,CAAehB,KAArC;AACA,UAAMmB,WAAW,GAAGR,IAAI,CAACK,OAAL,CAAahB,KAAjC;AAEA,UAAMoB,iBAAiB,GAAG,CAACrB,OAAO,CAACgB,WAAD,CAAlC;AACA,UAAMM,mBAAmB,GAAG,CAACtB,OAAO,CAACkB,aAAD,CAApC;AACA,UAAMK,mBAAmB,GAAGpB,WAAW,CAACgB,aAAD,CAAvC;AACA,UAAMK,iBAAiB,GAAG,CAACxB,OAAO,CAACoB,WAAD,CAAlC;AAEAZ,IAAAA,qBAAqB,CAAC;AACpBC,MAAAA,IAAI,EAAEY,iBADc;AAEpBX,MAAAA,MAAM,EAAEY,mBAFY;AAGpBX,MAAAA,MAAM,EAAEY,mBAHY;AAIpBX,MAAAA,IAAI,EAAEY;AAJc,KAAD,CAArB;AAOA,UAAMC,WAAW,GACfJ,iBAAiB,IACjBC,mBADA,IAEAC,mBAFA,IAGAC,iBAJF;;AAMA,QAAIC,WAAJ,EAAiB;AACf;AACD,KA5B+B,CA8BhC;;AACD,GA/BD;;AAiCA,QAAMhB,IAAI,GAAGZ,MAAM,EAAnB;AACA,QAAMa,MAAM,GAAGb,MAAM,EAArB;AACA,QAAMc,MAAM,GAAGd,MAAM,EAArB;AACA,QAAMe,IAAI,GAAGf,MAAM,EAAnB;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEgB,cAAhB;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,GAAEd,OAAO,CAAC2B,OAAQ,IAC5BnB,kBAAkB,CAACE,IAAnB,GAA0B,EAA1B,GAA+BV,OAAO,CAAC4B,OACxC,EAHH;AAAA,8BAKE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAElB;AAAlC;AAAA;AAAA;AAAA;AAAA,cANF,EAOG,CAACF,kBAAkB,CAACE,IAApB,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AACE,MAAA,SAAS,EAAG,GAAEV,OAAO,CAAC2B,OAAQ,IAC5BnB,kBAAkB,CAACG,MAAnB,GAA4B,EAA5B,GAAiCX,OAAO,CAAC4B,OAC1C,EAHH;AAAA,8BAKE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,GAAG,EAAEjB;AAApC;AAAA;AAAA;AAAA;AAAA,cANF,EAOG,CAACH,kBAAkB,CAACG,MAApB,iBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE;AACE,MAAA,SAAS,EAAG,GAAEX,OAAO,CAAC2B,OAAQ,IAC5BnB,kBAAkB,CAACI,MAAnB,GAA4B,EAA5B,GAAiCZ,OAAO,CAAC4B,OAC1C,EAHH;AAAA,8BAKE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,GAAG,EAAEhB;AAApC;AAAA;AAAA;AAAA;AAAA,cANF,EAOG,CAACJ,kBAAkB,CAACI,MAApB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAiCE;AACE,MAAA,SAAS,EAAG,GAAEZ,OAAO,CAAC2B,OAAQ,IAC5BnB,kBAAkB,CAACK,IAAnB,GAA0B,EAA1B,GAA+Bb,OAAO,CAAC4B,OACxC,EAHH;AAAA,8BAKE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAEf;AAAlC;AAAA;AAAA;AAAA;AAAA,cANF,EAOG,CAACL,kBAAkB,CAACK,IAApB,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCF,eA2CE;AAAK,MAAA,SAAS,EAAEb,OAAO,CAAC6B,OAAxB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEtB,KAAK,CAACuB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAE9B,OAAO,CAAC+B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CAlGD;;GAAMzB,Q;;KAAAA,Q;AAoGN,eAAeA,QAAf","sourcesContent":["import { useRef, useState } from \"react\";\n\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true,\n  });\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = name.current.value;\n    const enteredStreet = street.current.value;\n    const enteredPostal = postal.current.value;\n    const enteredCity = city.current.value;\n\n    const enteredNameIsVald = !isEmpty(enteredName);\n    const enteredStreetIsVald = !isEmpty(enteredStreet);\n    const enteredPostalIsVald = isFiveChars(enteredPostal);\n    const enteredCityIsVald = !isEmpty(enteredCity);\n\n    setFormInputsValidity({\n      name: enteredNameIsVald,\n      street: enteredStreetIsVald,\n      postal: enteredPostalIsVald,\n      city: enteredCityIsVald,\n    });\n\n    const formIsValid =\n      enteredNameIsVald &&\n      enteredStreetIsVald &&\n      enteredPostalIsVald &&\n      enteredCityIsVald;\n\n    if (formIsValid) {\n      return;\n    }\n\n    //Submit cart data\n  };\n\n  const name = useRef();\n  const street = useRef();\n  const postal = useRef();\n  const city = useRef();\n\n  return (\n    <form onSubmit={confirmHandler}>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.name ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={name} />\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.street ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"street\">Your street</label>\n        <input type=\"text\" id=\"street\" ref={street} />\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.postal ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"postal\">Your postal code</label>\n        <input type=\"text\" id=\"postal\" ref={postal} />\n        {!formInputsValidity.postal && (\n          <p>Please enter a valid postal code! (5 characther long)</p>\n        )}\n      </div>\n\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.city ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"city\">Your city</label>\n        <input type=\"text\" id=\"city\" ref={city} />\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n      </div>\n\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.button}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}