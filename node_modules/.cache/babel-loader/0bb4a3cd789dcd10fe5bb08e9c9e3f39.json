{"ast":null,"code":"var _jsxFileName = \"/home/lewagon/code/Eduard-tech/Udemy-React/react_food_app/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorState, setErrorState] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-food-app-30021-default-rtdb.europe-west1.firebasedatabase.app/meals.jss');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setErrorState(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (errorState) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"4OKcwx0KeeqnXbTgYBH8HjD8s3c=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/home/lewagon/code/Eduard-tech/Udemy-React/react_food_app/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","errorState","setErrorState","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","MealsLoading","mealList","map","meal"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,EAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAE7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uFAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAtBD;;AAyBEG,IAAAA,UAAU,GAAGc,KAAb,CAAmBC,KAAK,IAAI;AAC1BlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,aAAa,CAACgB,KAAK,CAACC,OAAP,CAAb;AACD,KAHD;AAMH,GAhCQ,EAgCN,EAhCM,CAAT;;AAkCA,MAAIpB,SAAJ,EAAe;AACb,wBAAO;AAAS,MAAA,SAAS,EAAEJ,OAAO,CAACyB,YAA5B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,MAAInB,UAAJ,EAAgB;AACd,wBAAO;AAAS,MAAA,SAAS,EAAEN,OAAO,CAACyB,YAA5B;AAAA,6BACL;AAAA,kBAAInB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,QAAMoB,QAAQ,GAAGxB,KAAK,CAACyB,GAAN,CAAWC,IAAD,iBACzB,QAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACV,EADX;AAGE,IAAA,IAAI,EAAEU,IAAI,CAACT,IAHb;AAIE,IAAA,WAAW,EAAES,IAAI,CAACR,WAJpB;AAKE,IAAA,KAAK,EAAEQ,IAAI,CAACP;AALd,KAEOO,IAAI,CAACV,EAFZ;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAElB,OAAO,CAACE,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKwB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArED;;GAAMzB,c;;KAAAA,c;AAuEN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\nimport classes from \"./AvailableMeals.module.css\";\n\n\nconst AvailableMeals = () => {\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorState, setErrorState] = useState();\n\n  useEffect(() => {\n    const fetchMeals = async () => { \n\n      const response = await fetch('https://react-food-app-30021-default-rtdb.europe-west1.firebasedatabase.app/meals.jss');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        })\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    }\n\n  \n      fetchMeals().catch(error => {\n        setIsLoading(false);\n        setErrorState(error.message);\n      });\n\n\n  }, [])\n\n  if (isLoading) {\n    return <section className={classes.MealsLoading}>\n      <p>Loading.....</p>\n    </section>\n  }\n\n  if (errorState) {\n    return <section className={classes.MealsLoading}>\n      <p>{errorState}</p>\n    </section>\n  }\n\n  const mealList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}